// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`definition for cartesian-chart matches the snapshot > cartesian-chart 1`] = `
{
  "description": "CartesianChart is a public Cloudscape component. It features a custom API, which resembles the Highcharts API where appropriate,
and adds extra features such as additional series types (thresholds), alternative tooltip, no-data, and more.",
  "events": [
    {
      "cancelable": false,
      "description": "A callback, executed when series visibility is toggled by clicking on legend items.",
      "detailType": "unknown",
      "name": "onToggleVisibleSeries",
    },
  ],
  "functions": [
    {
      "name": "clearFilter",
      "parameters": [],
      "returnType": "void",
    },
  ],
  "name": "CartesianChart",
  "properties": [
    {
      "description": "ARIA description of the chart.
This property corresponds to [accessibility.description](https://api.highcharts.com/highcharts/accessibility.description),
and requires the [accessibility module](https://www.highcharts.com/docs/accessibility/accessibility-module).",
      "name": "ariaDescription",
      "optional": true,
      "type": "string",
    },
    {
      "description": "ARIA label of the chart container.
This property corresponds to [lang.chartContainerLabel](https://api.highcharts.com/highcharts/lang.accessibility.chartContainerLabel),
and requires the [accessibility module](https://www.highcharts.com/docs/accessibility/accessibility-module).",
      "name": "ariaLabel",
      "optional": true,
      "type": "string",
    },
    {
      "description": "The chart hight in pixels, it includes chart plot, labels, and legend.
This property corresponds to [chart.height](https://api.highcharts.com/highcharts/chart.height).",
      "name": "chartHeight",
      "optional": true,
      "type": "number",
    },
    {
      "description": "Defines the minimal allowed height of the chart plot. If the parent container is too small to satisfy the min
height value, the vertical scrollbar is automatically added.",
      "name": "chartMinHeight",
      "optional": true,
      "type": "number",
    },
    {
      "description": "Defines the minimal allowed width of the chart plot. If the parent container is too small to satisfy the min
width value, the horizontal scrollbar is automatically added.",
      "name": "chartMinWidth",
      "optional": true,
      "type": "number",
    },
    {
      "description": "An array of default series colors. Only use it when you want to override the Cloudscape-provided set of colors.
This property corresponds to [colors](https://api.highcharts.com/highcharts/colors).",
      "name": "colors",
      "optional": true,
      "type": "Array<string>",
    },
    {
      "description": "When set to \`true\`, adds a visual emphasis on the zero baseline axis.",
      "name": "emphasizeBaselineAxis",
      "optional": true,
      "type": "boolean",
    },
    {
      "description": "When set, the chart grows automatically to fill the parent container.",
      "name": "fitHeight",
      "optional": true,
      "type": "boolean",
    },
    {
      "description": "The Highcharts instance, that can be obtained as \`import Highcharts from 'highcharts'\`.
Supported Highcharts versions:
* \`v12\`",
      "name": "highcharts",
      "optional": false,
      "type": "null | query",
    },
    {
      "description": "Inverts X and Y axes. Use it to show horizontal columns (bars).
This property corresponds to [chart.inverted](https://api.highcharts.com/highcharts/chart.inverted).",
      "name": "inverted",
      "optional": true,
      "type": "boolean",
    },
    {
      "description": "Chart series legend props.",
      "inlineType": {
        "name": "BaseLegendProps",
        "properties": [
          {
            "name": "align",
            "optional": true,
            "type": ""center" | "start"",
          },
          {
            "name": "enabled",
            "optional": true,
            "type": "false | true",
          },
          {
            "name": "extendedActions",
            "optional": true,
            "type": "false | true",
          },
          {
            "name": "title",
            "optional": true,
            "type": "string",
          },
          {
            "name": "tooltip",
            "optional": true,
            "type": "unknown",
          },
        ],
        "type": "object",
      },
      "name": "legend",
      "optional": true,
      "type": "BaseLegendProps",
    },
    {
      "description": "The empty, no-match, loading, or error state of the chart, rendered as [chart.noData](https://api.highcharts.com/highcharts/noData).
This property requires the \`no-data-to-display\` module.",
      "inlineType": {
        "name": "BaseNoDataProps",
        "properties": [
          {
            "name": "empty",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "error",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "loading",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "noMatch",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "statusType",
            "optional": true,
            "type": ""error" | "finished" | "loading"",
          },
        ],
        "type": "object",
      },
      "name": "noData",
      "optional": true,
      "type": "BaseNoDataProps",
    },
    {
      "description": "Chart plot options.
This property corresponds to [plotOptions](https://api.highcharts.com/highcharts/plotOptions).
Supported settings:
* \`series\` - Series options that apply to all series at once.
* * \`stacking\` (optional, 'normal') - Specifies series stacking behavior. Use it for stacked columns and areas.
",
      "name": "plotOptions",
      "optional": true,
      "type": "unknown",
    },
    {
      "description": "Chart series and data.
This property corresponds to [series](https://api.highcharts.com/highcharts/series).
Supported series types:
* [area](https://api.highcharts.com/highcharts/series.area).
* [areaspline](https://api.highcharts.com/highcharts/series.areaspline).
* [column](https://api.highcharts.com/highcharts/series.column).
* [errorbar](https://api.highcharts.com/highcharts/series.errorbar).
* [line](https://api.highcharts.com/highcharts/series.line).
* [scatter](https://api.highcharts.com/highcharts/series.scatter).
* [spline](https://api.highcharts.com/highcharts/series.spline).
* awsui-x-threshold - The line-like series to represent x-axis threshold (vertical, when \`inverted=false\`).
* awsui-y-threshold - The line-like series to represent y-axis threshold (horizontal, when \`inverted=false\`).
",
      "name": "series",
      "optional": false,
      "type": "Array<CartesianChartProps.Series>",
    },
    {
      "description": "Chart tooltip that replaces [tooltip](https://api.highcharts.com/highcharts/tooltip).
Supported properties:
* \`title\` - (optional, function) - Use it to provide a custom tooltip title.
* \`content\` - (optional, function) - Use it to provide a custom tooltip content.
* \`footer\` - (optional, function) - Use it to add a tooltip footer.
* \`series\` - (optional, function) - Use it to extend the default series list, in order to use custom value formatting,
inject links, or add expandable items.
",
      "inlineType": {
        "name": "CartesianChartProps.TooltipProps",
        "properties": [
          {
            "name": "body",
            "optional": true,
            "type": "(detail: CartesianChartProps.TooltipDetails) => React.ReactNode",
          },
          {
            "name": "footer",
            "optional": true,
            "type": "(detail: CartesianChartProps.TooltipDetails) => React.ReactNode",
          },
          {
            "name": "header",
            "optional": true,
            "type": "(detail: CartesianChartProps.TooltipDetails) => React.ReactNode",
          },
          {
            "name": "placement",
            "optional": true,
            "type": ""bottom" | "target"",
          },
          {
            "name": "series",
            "optional": true,
            "type": "(detail: CartesianChartProps.TooltipSeriesDetailItem) => CartesianChartProps.TooltipSeriesFormatted",
          },
          {
            "name": "size",
            "optional": true,
            "type": ""large" | "medium" | "small"",
          },
        ],
        "type": "object",
      },
      "name": "tooltip",
      "optional": true,
      "type": "CartesianChartProps.TooltipProps",
    },
    {
      "description": "List of series IDs to be visible. When unset, all series are visible by default, but can be hidden by clicking on the
legend. When a series does not have an ID, a series name is used instead.
When the property is provided, use \`onToggleVisibleSeries\` to update it when the legend series filtering is used.",
      "name": "visibleSeries",
      "optional": true,
      "type": "Array<string>",
    },
    {
      "description": "X-axis options that extend [xAxis](https://api.highcharts.com/highcharts/xAxis).
Supported properties (Highcharts):
* \`title\` (optional, string) - The axis title.
* \`type\` (optional, 'linear' | 'datetime' | 'category' | 'logarithmic') - The axis type.
* * linear - Uses continuous proportional values scale.
* * datetime - Similar to linear, but takes epoch time as values.
* * category - Uses discrete scale, requires \`categories\` to be set.
* * logarithmic - Uses continuous logarithmic values scale.
* \`min\`, \`max\` (optional, number) - The axis value boundaries.
* \`tickInterval\` (optional, number) - The tick distance.
* \`categories\` (optional, Array<string>) - The predefined list of axis values to be used for categorical axes.

Additional properties (Cloudscape):
* \`valueFormatter\` (optional, function) - Takes axis tick as input and returns a formatted string. This formatter also
applies to the tooltip header.
* \`valueDecimals\` (optional, number) - The number of decimal digits the axis values have, defaults to 2.
",
      "inlineType": {
        "name": "CartesianChartProps.AxisProps",
        "properties": [
          {
            "name": "categories",
            "optional": true,
            "type": "Array<string>",
          },
          {
            "name": "max",
            "optional": true,
            "type": "number",
          },
          {
            "name": "min",
            "optional": true,
            "type": "number",
          },
          {
            "name": "tickInterval",
            "optional": true,
            "type": "number",
          },
          {
            "name": "title",
            "optional": true,
            "type": "string",
          },
          {
            "name": "type",
            "optional": true,
            "type": ""category" | "datetime" | "linear" | "logarithmic"",
          },
          {
            "name": "valueDecimals",
            "optional": true,
            "type": "number",
          },
          {
            "name": "valueFormatter",
            "optional": true,
            "type": "(value: number) => string",
          },
        ],
        "type": "object",
      },
      "name": "xAxis",
      "optional": true,
      "type": "CartesianChartProps.AxisProps",
    },
    {
      "description": "Y-axis options that extend [xAxis](https://api.highcharts.com/highcharts/yAxis).
Supported properties (Highcharts):
* \`title\` (optional, string) - The axis title.
* \`type\` (optional, 'linear' | 'datetime' | 'category' | 'logarithmic') - The axis type.
* * linear - Uses continuous proportional values scale.
* * datetime - Similar to linear, but takes epoch time as values.
* * category - Uses discrete scale, requires \`categories\` to be set.
* * logarithmic - Uses continuous logarithmic values scale.
* \`min\`, \`max\` (optional, number) - The axis value boundaries.
* \`tickInterval\` (optional, number) - The tick distance.
* \`categories\` (optional, Array<string>) - The predefined list of axis values to be used for categorical axes.
* \`reversedStacks\` (optional, boolean) - Reverts series order in stacked series.

Additional properties (Cloudscape):
* \`valueFormatter\` (optional, function) - Takes axis tick as input and returns a formatted string. This formatter also
applies to the tooltip header.
* \`valueDecimals\` (optional, number) - The number of decimal digits the axis values have, defaults to 2.
",
      "inlineType": {
        "name": "CartesianChartProps.AxisProps",
        "properties": [
          {
            "name": "categories",
            "optional": true,
            "type": "Array<string>",
          },
          {
            "name": "max",
            "optional": true,
            "type": "number",
          },
          {
            "name": "min",
            "optional": true,
            "type": "number",
          },
          {
            "name": "tickInterval",
            "optional": true,
            "type": "number",
          },
          {
            "name": "title",
            "optional": true,
            "type": "string",
          },
          {
            "name": "type",
            "optional": true,
            "type": ""category" | "datetime" | "linear" | "logarithmic"",
          },
          {
            "name": "valueDecimals",
            "optional": true,
            "type": "number",
          },
          {
            "name": "valueFormatter",
            "optional": true,
            "type": "(value: number) => string",
          },
        ],
        "type": "object",
      },
      "name": "yAxis",
      "optional": true,
      "type": "CartesianChartProps.AxisProps",
    },
  ],
  "regions": [],
  "releaseStatus": "stable",
}
`;

exports[`definition for pie-chart matches the snapshot > pie-chart 1`] = `
{
  "description": "PieChart is a public Cloudscape component. It features a custom API, which resembles the Highcharts API where appropriate,
and adds extra features such as inner title and description, alternative tooltip, no-data, and more.",
  "events": [
    {
      "cancelable": false,
      "description": "A callback, executed when segments visibility is toggled by clicking on legend items.",
      "detailType": "unknown",
      "name": "onChangeVisibleSegments",
    },
  ],
  "functions": [
    {
      "name": "clearFilter",
      "parameters": [],
      "returnType": "void",
    },
  ],
  "name": "PieChart",
  "properties": [
    {
      "description": "ARIA description of the chart.
This property corresponds to [accessibility.description](https://api.highcharts.com/highcharts/accessibility.description),
and requires the [accessibility module](https://www.highcharts.com/docs/accessibility/accessibility-module).",
      "name": "ariaDescription",
      "optional": true,
      "type": "string",
    },
    {
      "description": "ARIA label of the chart container.
This property corresponds to [lang.chartContainerLabel](https://api.highcharts.com/highcharts/lang.accessibility.chartContainerLabel),
and requires the [accessibility module](https://www.highcharts.com/docs/accessibility/accessibility-module).",
      "name": "ariaLabel",
      "optional": true,
      "type": "string",
    },
    {
      "description": "The chart hight in pixels, it includes chart plot, labels, and legend.
This property corresponds to [chart.height](https://api.highcharts.com/highcharts/chart.height).",
      "name": "chartHeight",
      "optional": true,
      "type": "number",
    },
    {
      "description": "Defines the minimal allowed height of the chart plot. If the parent container is too small to satisfy the min
height value, the vertical scrollbar is automatically added.",
      "name": "chartMinHeight",
      "optional": true,
      "type": "number",
    },
    {
      "description": "Defines the minimal allowed width of the chart plot. If the parent container is too small to satisfy the min
width value, the horizontal scrollbar is automatically added.",
      "name": "chartMinWidth",
      "optional": true,
      "type": "number",
    },
    {
      "description": "An array of default series colors. Only use it when you want to override the Cloudscape-provided set of colors.
This property corresponds to [colors](https://api.highcharts.com/highcharts/colors).",
      "name": "colors",
      "optional": true,
      "type": "Array<string>",
    },
    {
      "description": "When set, the chart grows automatically to fill the parent container.",
      "name": "fitHeight",
      "optional": true,
      "type": "boolean",
    },
    {
      "description": "The Highcharts instance, that can be obtained as \`import Highcharts from 'highcharts'\`.
Supported Highcharts versions:
* \`v12\`",
      "name": "highcharts",
      "optional": false,
      "type": "null | query",
    },
    {
      "description": "Inner description of the donut chart.",
      "name": "innerDescription",
      "optional": true,
      "type": "string",
    },
    {
      "description": "Inner title of the donut chart.",
      "name": "innerValue",
      "optional": true,
      "type": "string",
    },
    {
      "description": "Chart series legend props.",
      "inlineType": {
        "name": "BaseLegendProps",
        "properties": [
          {
            "name": "align",
            "optional": true,
            "type": ""center" | "start"",
          },
          {
            "name": "enabled",
            "optional": true,
            "type": "false | true",
          },
          {
            "name": "extendedActions",
            "optional": true,
            "type": "false | true",
          },
          {
            "name": "title",
            "optional": true,
            "type": "string",
          },
          {
            "name": "tooltip",
            "optional": true,
            "type": "unknown",
          },
        ],
        "type": "object",
      },
      "name": "legend",
      "optional": true,
      "type": "BaseLegendProps",
    },
    {
      "description": "The empty, no-match, loading, or error state of the chart, rendered as [chart.noData](https://api.highcharts.com/highcharts/noData).
This property requires the \`no-data-to-display\` module.",
      "inlineType": {
        "name": "BaseNoDataProps",
        "properties": [
          {
            "name": "empty",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "error",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "loading",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "noMatch",
            "optional": true,
            "type": "React.ReactNode",
          },
          {
            "name": "statusType",
            "optional": true,
            "type": ""error" | "finished" | "loading"",
          },
        ],
        "type": "object",
      },
      "name": "noData",
      "optional": true,
      "type": "BaseNoDataProps",
    },
    {
      "description": "Chart segment options.",
      "inlineType": {
        "name": "PieChartProps.SegmentOptions",
        "properties": [
          {
            "name": "description",
            "optional": true,
            "type": "((detail: PieChartProps.SegmentDescriptionDetail) => string) | null",
          },
          {
            "name": "title",
            "optional": true,
            "type": "((detail: PieChartProps.SegmentDescriptionDetail) => string) | null",
          },
        ],
        "type": "object",
      },
      "name": "segmentOptions",
      "optional": true,
      "type": "PieChartProps.SegmentOptions",
    },
    {
      "description": "Chart series and data.
This property corresponds to [series](https://api.highcharts.com/highcharts/series).
Supported series types:
* [pie](https://api.highcharts.com/highcharts/series.pie).
* donut - the pie series with predefined inner radius.
",
      "name": "series",
      "optional": false,
      "type": "PieChartProps.Series | null",
    },
    {
      "description": "Chart tooltip that replaces [tooltip](https://api.highcharts.com/highcharts/tooltip).
Supported properties:
* \`title\` - (optional, function) - Use it to provide a custom tooltip title.
* \`content\` - (optional, function) - Use it to provide a custom tooltip content.
* \`footer\` - (optional, function) - Use it to add a tooltip footer.
",
      "inlineType": {
        "name": "PieChartProps.TooltipProps",
        "properties": [
          {
            "name": "body",
            "optional": true,
            "type": "(detail: PieChartProps.TooltipDetails) => React.ReactNode",
          },
          {
            "name": "enabled",
            "optional": true,
            "type": "false | true",
          },
          {
            "name": "footer",
            "optional": true,
            "type": "(detail: PieChartProps.TooltipDetails) => React.ReactNode",
          },
          {
            "name": "placement",
            "optional": true,
            "type": ""bottom" | "target"",
          },
          {
            "name": "size",
            "optional": true,
            "type": ""large" | "medium" | "small"",
          },
          {
            "name": "title",
            "optional": true,
            "type": "(detail: PieChartProps.TooltipDetails) => React.ReactNode",
          },
        ],
        "type": "object",
      },
      "name": "tooltip",
      "optional": true,
      "type": "PieChartProps.TooltipProps",
    },
    {
      "description": "List of segments IDs to be visible. When unset, all segments are visible by default, but can be hidden by clicking on the
legend. When a segment does not have an ID, a segment name is used instead.
When the property is provided, use \`onToggleVisibleSegment\` to update it when the legend segment filtering is used.",
      "name": "visibleSegments",
      "optional": true,
      "type": "Array<string>",
    },
  ],
  "regions": [],
  "releaseStatus": "stable",
}
`;
